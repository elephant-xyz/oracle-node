Comment: Elephant Express workflow. Triggered by Starter Lambda with one SQS message payload.
StartAt: ValidateInput
States:
  ValidateInput:
    Type: Choice
    Choices:
      - Variable: $.Records[0].s3.bucket.name
        IsPresent: true
        Next: Preprocess
    Default: FailInvalid
  Preprocess:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: ${WorkflowPreProcessorFunction}
      Payload.$: $
    ResultPath: $.pre
    Next: Prepare
    Retry:
      - ErrorEquals: [States.TaskFailed, Lambda.ServiceException, Lambda.AWSLambdaException, Lambda.SdkClientException]
        IntervalSeconds: 2
        MaxAttempts: 2
        BackoffRate: 2
    Catch:
      - ErrorEquals: [States.ALL]
        ResultPath: $.error
        Next: FailRuntime
  Prepare:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: ${DownloaderFunction}
      Payload:
        input_s3_uri.$: $.pre.Payload.county_prep_input_s3_uri
        output_s3_uri_prefix.$: $.pre.Payload.output_prefix
        browser: true
    ResultPath: $.prepare
    Next: Postprocess
    Retry:
      - ErrorEquals: [States.TaskFailed, Lambda.ServiceException, Lambda.AWSLambdaException, Lambda.SdkClientException]
        IntervalSeconds: 5
        MaxAttempts: 3
        BackoffRate: 2
    Catch:
      - ErrorEquals: [States.ALL]
        ResultPath: $.error
        Next: FailRuntime
  Postprocess:
    Type: Task
    Resource: arn:aws:states:::lambda:invoke
    Parameters:
      FunctionName: ${WorkflowPostProcessorFunction}
      Payload:
        input.$: $
        prepare.$: $.prepare.Payload
        seed_output_s3_uri.$: $.pre.Payload.seed_output_s3_uri
    ResultPath: $.post
    Next: RequeueOnSuccess
    Retry:
      - ErrorEquals: [States.TaskFailed, Lambda.ServiceException, Lambda.AWSLambdaException, Lambda.SdkClientException]
        IntervalSeconds: 5
        MaxAttempts: 2
        BackoffRate: 2
    Catch:
      - ErrorEquals: [States.ALL]
        ResultPath: $.error
        Next: FailRuntime
  RequeueOnSuccess:
    Type: Task
    Resource: arn:aws:states:::sqs:sendMessage
    Parameters:
      QueueUrl: ${WorkflowSqsQueueUrl}
      MessageBody.$: States.JsonToString($)
    ResultPath: $.requeue
    End: true
  FailInvalid:
    Type: Fail
    Error: InvalidInput
    Cause: Missing S3 event structure in SQS message
  FailRuntime:
    Type: Fail
    Error: WorkflowFailed
    Cause: A task failed. See error field.


